----------------------------------------------------------------------
h1. Installation

h3. Goals

* To install a working version of Rake on your machine.

h2. Installing Ruby gets Rake

p. In order to run the immersion, you need Ruby installed.
Rake is distributed as part of the Ruby installation.
If you do not already have Ruby setup, please visit <a href="http://ruby-lang.org/en/downloads" target="_blank">http://ruby-lang.org/en/downloads</a> for operating system specific instructions.

p. To verify your Ruby installation,

execute:
ruby --version

p. Any response for Ruby with a version number greater than 1.8 is fine.

p. By the way, you need to know some Ruby to get the most from this tutorial.
If you feel your Ruby experience is wanting, try "(external)Ruby Koans":http://rubykoans.com to gain enlightnment.

h2. Make sure Rake is <i>Ready To Go!</i>

p. <em>(It probably is, but in case you're having problems...)</em>

p. To make sure Rake is working correctly, change directory into the top project directory of rake and

execute:
rake

p. if you already have a version of rake installed, or

execute:
ruby -Ilib bin/rake

p. otherwise.

h2. Hey, wait just a second...

p. Yes, you saw it.
We ran Rake to test Rake.
This may feel a bit self-referential, but that's part of the magic.

p. *Executing Rake with no arguments conventionally runs the tests on a project.*

p. In this context Rake was operating on the Rake project, running its tests.
It's incredibly useful - but more about this later.

p. The immersion will be introducing convention along with content, helping you to become savvy as well as proficient.

----------------------------------------------------------------------
h1. An Example: Building a Web Site

h3. Goals

* Introduce a problem that will be solved using Rake in the tutorial.

h2. The Initial Problem Domain

p. The tutorial focuses on learning by doing, so we're going to use Rake to build a static website.
It will be simple at first, but we'll iterate as we go on.
Our use of Rake will iterate as well.

<img id="web1" src="content_images_web1.jpg">

p. Our starting point is about as simple as it can be.
We have a Web Site Project Directory with a src and html directory below it.
The src directory contains an index.md that needs to be transformed into an index.html file in the html directory.

p. (In case you didn't know: md is the extention for markdown, indicating the file is encoded using "(external)textile":http://textile.thresholdstate.com format; html is the extension for hypertext markup language, the lingua franca of web sites.)

h2. Creating the Project

p. Run a few quick command in a shell to get things started.

Execute:
mkdir WSProject WSProject/src WSProject/html
echo "p. Hello, World" > WSProject/src/index.md

h2. Markdown to HTML

p. We want to run Rake and have it do the markdown-to-html transformation for us.
But first we need to know how to do it ourselves, of course.
So, we'll experiment in irb.

p. Irb is the playground of the ruby world.
In it you can test ideas, exploring as you go along, experimenting so you can get it right more quickly.
And it's on your system now!

p. Here we'll give "(external)RedCloth":http://redcloth.org a try - it's a rubygem that converts textile to html.

Execute:
.irb
.require "RedCloth"
.s = "p. Hello, World"
.RedCloth.new(s).to_html
.quit
=irb

Session:
=irb
EOF

